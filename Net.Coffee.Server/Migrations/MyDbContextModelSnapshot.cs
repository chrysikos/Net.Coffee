// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Net.Coffee.Server.Persistence;

namespace Net.Coffee.Server.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Net.Coffee.Server.Domain.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<decimal>("DiscountPercentage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(19, 4)")
                        .HasDefaultValue(0.00m);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Net.Coffee.Server.Domain.User", b =>
                {
                    b.OwnsOne("Net.Coffee.Server.Domain.Contact", "Contact", b1 =>
                        {
                            b1.Property<Guid>("UserID")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CellPhone")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Email")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FirstName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LastName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Phone")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UserID");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserID");

                            b1.OwnsOne("Net.Coffee.Library.SharedKernel.Address", "Address", b2 =>
                                {
                                    b2.Property<Guid>("ContactUserID")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("City")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<short>("Number")
                                        .HasColumnType("smallint");

                                    b2.Property<string>("PostalCode")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Street")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ContactUserID");

                                    b2.ToTable("Users");

                                    b2.WithOwner()
                                        .HasForeignKey("ContactUserID");
                                });
                        });

                    b.OwnsOne("Net.Coffee.Server.Domain.Credentials", "Credentials", b1 =>
                        {
                            b1.Property<Guid>("UserID")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Password")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Username")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UserID");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserID");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
